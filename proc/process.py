import sys
import numpy as np
import csv
from consts import SPLIT, RE_THRESH, IM_THRESH
ticks = np.array([[12,88.8],[31.2,89.3],[49.2,90.8],[67.5,92.3],[85.8,93.7],[104,94.3],[122.7,95.7],[140.3,96],[159.7,98],[178.3,98.3],[197,99.7],[215,100.3],[233.3,101.7],[251.7,102],[270.3,104],[289,105],[307,106.3],[325,106.3],[344.3,108.3],[362,108],[380.7,111],[398.7,110.7],[417.7,111.3],[436,112],[453,115.3],[472,115.7],[489.3,117.3],[507,118],[525.3,119.3],[543.5,120],[561.2,120.5],[580.2,120.8],[598,122.2],[616,122.2],[634.2,123.2],[652.2,123.8],[670,124.2],[688.2,125.2],[706.5,127],[724.8,127],[742.2,128.5],[759.8,128.8],[778.8,129.5],[796.8,129.5],[814.2,131.2],[833.2,130.5],[850.5,132],[869.2,131.5],[887,134.2],[905.8,134.5],[923,134.8],[941,134.8],[959.8,136.8],[976.8,136.2],[994.8,137.5],[1013.2,138],[1030.8,138.8],[1049,139.5],[1067.8,141.2],[1085.2,141],[1103.5,143],[1121,143.2],[1139.2,144.2],[1157.5,144.5],[1176,146.5],[1193.8,147.5],[1211.5,148],[1229,147.8],[1247.2,149.8],[1265.8,150.2],[1283.5,151.8],[1301.5,151.8],[1318.8,152.5],[1337.2,153.2],[1355.5,154.2],[1372.8,154.8],[1390.5,156.8],[1408.5,156.5],[1426.8,158.8],[1445.2,158.2],[1462.2,159.5],[1481.5,160.2],[1498.2,161.5],[1517.2,161.5],[1534.5,162.5],[1553,162.8],[1570.8,164.5],[1588.2,165],[1606.5,167.5]])
P = np.array([
	[1594 - 808, 450 - 422], # right-ish
	[859.7 - 841, 27.7 - 425.5] # up-ish
]).T # maps from z to x space
Pinv = np.linalg.inv(P)
z_ticks = np.dot(Pinv, ticks.T).T

re_z1_0 = np.dot(Pinv, [838.2,162.8])[1]
im_z1_0 = np.dot(Pinv, [827,418])[1]

for fname in sys.argv[1:]:
	with open(fname, 'r') as f:
		with open('%s_out.csv' % fname[:-4], 'w') as g:
			csv_r = csv.reader(f)
			next(csv_r)
			def find_z0(z):
				for i, z_tick in enumerate(z_ticks):
					if z_tick[0] > z[0]:
						if i > 0:
							return i - (z_tick[0] - z[0]) / (z_tick[0] - z_ticks[i-1][0])
						else:
							return 0
				return ticks.shape[0]
			
			csv_w = csv.writer(g)
			for row in csv_r:
				if int(row[0]) > RE_THRESH and int(row[3]) > IM_THRESH:
					z_re = np.dot(Pinv, np.array([row[2], int(row[1]) - SPLIT], dtype=np.float64))
					z_im = np.dot(Pinv, np.array([row[5], row[4]], dtype=np.float64))
					z0 = (find_z0(z_re) + find_z0(z_im)) / 2 # eighths-inches from starting end of ruler
					csv_w.writerow([z0, z_re[1] - re_z1_0, z_im[1] - im_z1_0])